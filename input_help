; All units are SI

[mode]
model=flexure ; "flexure" or "prattairy"
dimension=2 ; 1 (line) or 2 (surface) dimensions
method=SPA ; Solution method: FD (Finite Difference), FFT (Fast Fourier 
;          ; Transform, not yet implemented), or SPA (Spatial domain analytical 
;          ; solutions). Both the FFT and SPA techniques rely on superposition 
;          ; of solutions, because they can be combined linearly, whether in 
;          ; the spectral or the spatial domain)
;          ; Required only for flexural solutions

[parameter]
; Young's modulus, Poisson's ratio, and elastic thickness (whether input 
; as a scalar or a grid) are required only for the flexural isostatic solutions
YoungsModulus=1.0E11
PoissonsRatio=0.25
GravAccel=9.8
MantleDensity=3300
InfillMaterialDensity=0 ; This is the density of material (e.g., air, water) 
;                       ; that is filling (or leaving) the hole that was 
;                       ; created by flexure. If you do not have a constant 
;                       ; density of infilling material, for example, at a 
;                       ; subsiding shoreline, you must instead iterate (see
;                       ; [numerical], below).
ElasticThickness=10000 ; Used for FFT and S solutions (see "method", above);
;                      ; Finite differene solutions require a grid of elastic 
;                      ; thicknesses because they can handle nonuniform  
;                      ; elastic thickness (see [input], below)

[input]
; space-delimited array of loads (rho*g*h)
Loads=q0_sample/2D/central_square_load.txt
;
; space-delimited array of elastic thicknesses; used for the finite difference 
; solution
ElasticThickness=Te_sample/2D/10km_const.txt

[output]
; DeflectionOut is for writing an output file. 
; If this is blank, no output is printed.
; Otherwise, a space-delimited ASCII file of 
; outputs is with this file name (and path).
DeflectionOut=tmpout.txt
;
; Acceptable inputs to "Plot" are q0 (loads), w (deflection), or both; any 
; other entry here will result in no plotting.
; Automatically plots a 1D line or 2D surface based on the choice 
; of "dimension" variable in [mode]
Plot=both

[numerical]
GridSpacing=20000
; Iterates until this is the difference between two subsequent iterations
; Set as 0 if you don't want to iterate
; Iteration not yet implemented
convergence=1E-3
